<?xml version="1.0" encoding="UTF-8"?>
<!-- ======================================================================
     25/02/2009 16:08:41

     DARE
     description

     oscar
     ====================================================================== -->
<project name="DARE" default="war">
	<description>
            description
    </description>

	<property name="dist" location="target" />
	<property file="build.properties" />

	<property name="webapp" location="src/main/webapp" />

	<property name="classes_dir" location="${dist}/classes" />

	<property environment="env"/>

	<property name="glassfish_home" value="${env.GLASSFISH_HOME}" />

	<property name="unit_test_classes_dir" location="${dist}/unit-test-classes" />

	<property name="functional_test_classes_dir" location="${dist}/functional-test-classes" />

	<property name="WEB-INF" location="${webapp}/WEB-INF/" />

	<property name="src.unit_tests" location="src/main/test" />

	<property name="src.functional_tests" location="src/main/functional_test" />

	<property name="reports.tests" location="${dist}/reports" />

	<property name="asadmin" location="${glassfish_home}/bin/asadmin" />


	<fileset dir="${string_editor_project_location}" id="string_editor_dependencies">
		<include name="lib/*.jar" />
		<include name="plugins_bin/stringeditor/**/*.jar" />
	</fileset>

	<fileset dir="${string_editor_project_location}/scriptengines" id="ruby_libs">
		<include name="**/*.jar" />
	</fileset>

	<fileset dir="${string_editor_project_location}" id="string_editor_jar">
		<include name="stringeditor.jar" />
	</fileset>

	<fileset dir="lib" id="libs">
		<include name="**/*.jar" />
	</fileset>

	<fileset dir="lib/runtime" id="runtime-libs" includes="**/*.jar" />

	<path id="compile-classpath">
		<fileset refid="ruby_libs" />
		<fileset refid="string_editor_jar" />
		<fileset refid="libs" />
	</path>

	<path id="runtime-classpath">
		<fileset refid="string_editor_dependencies" />
		<fileset refid="ruby_libs" />
		<fileset refid="string_editor_jar" />
		<fileset refid="runtime-libs" />
		<pathelement location="${classes_dir}" />
	</path>

	<path id="test-classpath">
		<fileset refid="string_editor_dependencies" />
		<fileset refid="ruby_libs" />
		<fileset refid="string_editor_jar" />
		<fileset refid="libs" />
		<pathelement location="${classes_dir}" />
		<pathelement location="${unit_test_classes_dir}" />
		<pathelement location="${functional_test_classes_dir}" />
	</path>

	<target name="build_string_editor">
		<ant antfile="build-jar.xml" dir="${string_editor_project_location}" target="build-jar" />
	</target>

	<target name="compile" depends="build_string_editor">
		<mkdir dir="${classes_dir}" />
		<javac srcdir="src/main/java" destdir="${classes_dir}" debug="true" source="1.6" target="1.6" includeantruntime="false">
			<classpath refid="compile-classpath">
			</classpath>
		</javac>
		<copy todir="${classes_dir}">
			<fileset dir="src/main/java" />
		</copy>
		<copy todir="${classes_dir}">
			<fileset dir="src/main/resources" />
		</copy>
	</target>

	<target name="compile-unit-test" depends="compile">
		<mkdir dir="${unit_test_classes_dir}" />
		<javac srcdir="${src.unit_tests}" destdir="${unit_test_classes_dir}" debug="true" source="1.6" target="1.6" includeantruntime="false">
			<classpath>
			    <path refid="compile-classpath" />
			    <pathelement location="${classes_dir}" />
			</classpath>
		</javac>
	</target>

	<target name="compile-functional-test" depends="compile, compile-unit-test">
		<mkdir dir="${functional_test_classes_dir}" />
		<javac srcdir="${src.functional_tests}" destdir="${functional_test_classes_dir}" debug="true" source="1.6" target="1.6" includeantruntime="false">
			<classpath>
			    <pathelement location="${unit_test_classes_dir}" />
			    <path refid="compile-classpath" />
			    <pathelement location="${classes_dir}" />
			</classpath>
		</javac>
	</target>

	<target name="unit-test" depends="compile-unit-test">
		<mkdir dir="${reports.tests}" />
		<junit printsummary="yes" haltonfailure="yes">
			<classpath refid="test-classpath" />
			<formatter type="plain" />
			<batchtest todir="${reports.tests}">
				<fileset dir="${src.unit_tests}">
					<include name="**/*Test*.java" />
					<exclude name="**/AllTests.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="functional-test" depends="compile-functional-test, deploy">
		<mkdir dir="${reports.tests}" />
		<junit printsummary="yes" haltonfailure="yes">
			<classpath refid="test-classpath" />
			<formatter type="plain" />
			<batchtest todir="${reports.tests}">
				<fileset dir="${src.functional_tests}">
					<include name="**/*Test*.java" />
					<exclude name="**/AllTests.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="copy-libs">
		<copy todir="${dist}/lib" flatten="true">
			<fileset refid="string_editor_dependencies" />
			<fileset refid="ruby_libs" />
			<fileset refid="string_editor_jar" />
			<fileset refid="runtime-libs" />
		</copy>
	</target>

	<property name="expanded_dir" location="${dist}/${ant.project.name}_war" />

	<target name="expand" depends="compile, copy-libs,unit-test">
		<mkdir dir="${expanded_dir}/WEB-INF/lib" />
		<mkdir dir="${expanded_dir}/WEB-INF/classes" />
		<copy todir="${expanded_dir}/WEB-INF/classes">
			<fileset dir="${classes_dir}" />
		</copy>
		<copy todir="${expanded_dir}/WEB-INF/lib">
			<fileset dir="${dist}/lib" includes="*.jar" />
		</copy>
		<copy todir="${expanded_dir}">
			<fileset dir="${webapp}" />
		</copy>
	</target>

	<target name="check-already-started">
		<exec executable="${asadmin}" resultproperty="asadmin_result">
			<arg value="uptime" />
		</exec>
		<condition property="start_required">
			<not>
				<equals arg1="${asadmin_result}" arg2="0" />
			</not>
		</condition>
	</target>

	<target name="start" depends="check-already-started" if="start_required">
		<echo message="starting glassfish" />
		<exec executable="${asadmin}">
			<arg value="start-domain" />
			<arg value="--debug" />
		</exec>
	</target>

	<target name="stop" depends="check-already-started" unless="start_required">
		<echo message="stoping glassfish" />
		<exec executable="${asadmin}">
			<arg value="stop-domain" />
		</exec>
	</target>

	<target name="deploy" depends="expand, start">
		<exec executable="${asadmin}">
			<arg value="deploy" />
			<arg value="--force=true" />
			<arg value="--name=${ant.project.name}" />
			<arg value="${expanded_dir}" />
		</exec>
	</target>

	<target name="undeploy" depends="start">
		<exec executable="${asadmin}">
			<arg value="undeploy" />
			<arg value="${ant.project.name}" />
		</exec>
	</target>

	<target name="reload" depends="expand, start">
		<touch file="${expanded_dir}/.reload" />
	</target>

	<target name="war" depends="compile, copy-libs,unit-test" description="web application archive">
		<war destfile="${dist}/${ant.project.name}.war" webxml="${WEB-INF}/web.xml">
			<classes dir="${classes_dir}" />
			<lib dir="${dist}/lib" />
			<webinf dir="${WEB-INF}" excludes="web.xml" />
			<fileset dir="src/main/webapp" excludes="WEB-INF" />
		</war>
	</target>



	<target name="clean">
		<delete dir="${dist}" />
	</target>

</project>
